name: Release
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  dist:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: cargo-mtime
            name: cargo-mtime-Darwin-x86_64.tar.gz
            command: build

          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: cargo-mtime
            name: cargo-mtime-Darwin-aarch64.tar.gz
            command: build

          - release_for: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: cargo-mtime
            name: cargo-mtime-linux-x86_64.tar.gz
            command: build

          - release_for: linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: cargo-mtime
            name: cargo-mtime-linux-aarch64.tar.gz
            command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: "cargo-mtime-*"

  publish:
    name: Publish
    needs: [dist]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: false

      - uses: actions/download-artifact@v4
      - run: ls -al cargo-mtime-*

      - name: Calculate tag name
        run: |
          name=dev
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            name=${GITHUB_REF:10}
          fi
          echo ::set-output name=val::$name
          echo TAG=$name >> $GITHUB_ENV
        id: tagname

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: cargo-mtime-*
          file_glob: true
          tag: ${{ steps.tagname.outputs.val }}
          overwrite: true

      - name: Extract version
        id: extract-version
        run: |
          printf "::set-output name=%s::%s\n" tag-name "${GITHUB_REF#refs/tags/}"
