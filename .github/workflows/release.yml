name: Release
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

env:
  BIN_NAME: cargo-mtime
  PROJECT_NAME: cargo-mtime

jobs:
  dist:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: cargo-mtime
            name: cargo-mtime-Darwin-x86_64.tar.gz
            command: both

          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: cargo-mtime
            name: cargo-mtime-Darwin-aarch64.tar.gz
            command: both

          - release_for: linux-x86_64
            os: linux-latest
            target: x86_64-unknown-linux-gnu
            bin: cargo-mtime
            name: cargo-mtime-linux-x86_64.tar.gz
            command: both

          - release_for: linux-x86_64
            os: linux-latest
            target: x86_64-unknown-linux-gnu
            bin: cargo-mtime
            name: cargo-mtime-linux-x86_64.tar.gz
            command: both

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

  publish:
    name: Publish
    needs: [dist]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: false

      - uses: actions/download-artifact@v2
      - run: ls -al bins-*

      - name: Calculate tag name
        run: |
          name=dev
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            name=${GITHUB_REF:10}
          fi
          echo ::set-output name=val::$name
          echo TAG=$name >> $GITHUB_ENV
        id: tagname

      - name: Build archive
        shell: bash
        run: |
          set -ex

          rm -rf tmp
          mkdir tmp
          mkdir dist

          for dir in bins-* ; do
              platform=${dir#"bins-"}
              unset exe
              if [[ $platform =~ "windows" ]]; then
                  exe=".exe"
              fi
              pkgname=$PROJECT_NAME-$TAG-$platform
              mkdir tmp/$pkgname
              # cp LICENSE README.md tmp/$pkgname
              mv bins-$platform/$BIN_NAME$exe tmp/$pkgname
              chmod +x tmp/$pkgname/$BIN_NAME$exe

              if [ "$exe" = "" ]; then
                  tar cJf dist/$pkgname.tar.xz -C tmp $pkgname
              else
                  (cd tmp && 7z a -r ../dist/$pkgname.zip $pkgname)
              fi
          done

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ steps.tagname.outputs.val }}
          overwrite: true

      - name: Extract version
        id: extract-version
        run: |
          printf "::set-output name=%s::%s\n" tag-name "${GITHUB_REF#refs/tags/}"
